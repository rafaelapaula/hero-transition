//
//  HTListViewController.swift
//  HeroTransitions
//
//  Created by Rafaela Lourenço de Paula on 19/10/2018.
//  Copyright (c) 2018 Rafaela Lourenço de Paula. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//
//  Edited by Rodrigo Soldi
//

import UIKit
import Hero

protocol HTListInteractorDelegate: class {
    func viewDidLoad(_ request: HTListScene.View.DidLoad.Request)
}

class HTListViewController: HTGenericViewController, HTListViewControllerDelegate {
    
    lazy var interactor: HTListInteractorDelegate? = HTListInteractor(self)
    lazy var router: HTListRouterDelegate? = HTListRouter(self)
    
    var items = [(String, Ancor)]()
    
    @IBOutlet weak var tableView: UITableView!
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        let request = HTListScene.View.DidLoad.Request()
        interactor?.viewDidLoad(request)
        
    }
    
    
    // MARK: Actions
    
    
    // Mark: Protocols
    
    func displayInformations(_ viewModel: HTListScene.View.DidLoad.ViewModel) {
        self.items = viewModel.items
        tableView.reloadData()
    }
}

extension HTListViewController : UITableViewDelegate, UITableViewDataSource {
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return items.count
    }
    
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        if let cell = tableView.dequeueReusableCell(withIdentifier: "cell", for: indexPath) as? HTItemTableViewCell {
            
            cell.configure(items[indexPath.row].0)
            cell.hero.isEnabled = true
            cell.hero.id = "redView"
            
            return cell
        }
        
        return HTItemTableViewCell()
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        tableView.deselectRow(at: indexPath, animated: true)
        router?.toDetail(withAncor: items[indexPath.row].1)
        print("select item")
        
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return UITableView.automaticDimension
    }
    
    func tableView(_ tableView: UITableView, estimatedHeightForRowAt indexPath: IndexPath) -> CGFloat {
        return UITableView.automaticDimension
    }
    
}

extension HTListViewController {
    
    public static var instance: HTListViewController {
        let storyboard = UIStoryboard(name: String(describing: HTListViewController.self), bundle: nil)
        guard let viewController = storyboard.instantiateInitialViewController() as? HTListViewController else {
            fatalError("ViewController must be exists to load scene.")
        }
        return viewController
    }
    
}
